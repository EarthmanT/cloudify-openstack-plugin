tosca_definitions_version: cloudify_dsl_1_3

imports:
  - types.yaml
  - https://raw.githubusercontent.com/EarthmanT/cloudify-openstack-plugin/secret-store-os/plugin.yaml

inputs:

  use_secret_store:
    default: true

  keystone_username:
    default: ''
    type: string

  keystone_password:
    default: ''
    type: string

  keystone_tenant_name:
    default: ''
    type: string

  keystone_url:
    default: ''
    type: string

  region:
    default: ''
    type: string

  nova_url:
    default: ''
    type: string

  neutron_url:
    default: ''
    type: string

  openstack_configuration:
    default:
      username: { get_input: keystone_username }
      password: { get_input: keystone_password }
      tenant_name: { get_input: keystone_tenant_name }
      auth_url: { get_input: keystone_url }
      region: { get_input: region }
      nova_url: { get_input: nova_url }
      neutron_url: { get_input: neutron_url }

  use_existing_example_openstack_network_router:
    type: boolean
    default: false

  example_openstack_network_router_name:
    type: string
    default: 'openstack-example-network-router'

  use_existing_example_openstack_network:
    type: boolean
    default: false

  example_openstack_network_name:
    type: string
    default: 'openstack-example-network-name'

  use_existing_example_openstack_network_subnet:
    type: boolean
    default: false

  example_openstack_network_subnet:
    type: string
    default: 'openstack-example-network-subnet'

  example_openstack_network_subnet_ipversion:
    default: 4

  example_openstack_network_subnet_cidr:
    type: string
    default: 192.168.120.0/24

  example_openstack_network_subnet_dnsservers:
    default: [8.8.4.4, 8.8.8.8]

  example_openstack_network_subnet_allocation_pools:
    default:
      - start: 192.168.120.50
        end: 192.168.120.250

  use_existing_example_openstack_external_network:
    type: boolean
    default: true

  example_openstack_external_network_name:
    type: string
    default: external

  use_existing_example_openstack_key:
    default: false

  example_openstack_key:
    default: openstack-key

  example_openstack_key_file:
    default: ~/.ssh/openstack-key.pem

  use_existing_openstack_virtual_machine:
    type: boolean
    default: false

  openstack_virtual_machine:
    type: string
    default: ''

  openstack_instances:
    default: 1

  example_openstack_virtual_machine_image_id:
    type: string

  example_openstack_virtual_machine_flavor_id:
    type: string

  openstack_agent_username:
    default: ubuntu

  openstack_agent_local_path_to_key_file:
    default: { get_input: example_openstack_key_file }

  openstack_agent_port:
    default: 22

node_templates:

  example_openstack_key:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      use_secret_store: { get_input: use_secret_store }
      openstack_config: { get_input: openstack_configuration }
      use_external_resource: { get_input: use_existing_example_openstack_key }
      resource_id: { get_input: example_openstack_key }
      private_key_path: { get_input: example_openstack_key_file }

  example_openstack_external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      use_secret_store: { get_input: use_secret_store }
      openstack_config: { get_input: openstack_configuration }
      use_external_resource: { get_input: use_existing_example_openstack_external_network }
      resource_id: { get_input: example_openstack_external_network_name }

  example_openstack_network:
    type: cloudify.openstack.nodes.Network
    properties:
      use_secret_store: { get_input: use_secret_store }
      openstack_config: { get_input: openstack_configuration }
      use_external_resource: { get_input: use_existing_example_openstack_network }
      resource_id: { get_input: example_openstack_network_name }

  example_openstack_network_router:
    type: cloudify.openstack.nodes.Router
    properties:
      use_secret_store: { get_input: use_secret_store }
      openstack_config: { get_input: openstack_configuration }
      use_external_resource: { get_input: use_existing_example_openstack_network_router }
      resource_id: { get_input: example_openstack_network_router_name }
    relationships:
      - target: example_openstack_external_network
        type: cloudify.relationships.connected_to

  example_openstack_network_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      use_secret_store: { get_input: use_secret_store }
      openstack_config: { get_input: openstack_configuration }
      use_external_resource: { get_input: use_existing_example_openstack_network_subnet }
      resource_id: { get_input: example_openstack_network_subnet }
      subnet:
        ip_version: { get_input: example_openstack_network_subnet_ipversion }
        cidr: { get_input: example_openstack_network_subnet_cidr }
        dns_nameservers: { get_input: example_openstack_network_subnet_dnsservers }
        allocation_pools: { get_input: example_openstack_network_subnet_allocation_pools }
    relationships:
      - target: example_openstack_network
        type: cloudify.relationships.contained_in
      - target: example_openstack_network_router
        type: cloudify.openstack.subnet_connected_to_router

  openstack_virtual_machine:
    type: cloudify.openstack.nodes.Server
    capabilities:
      scalable:
        properties:
          default_instances: { get_input: openstack_instances }
    properties:
      use_secret_store: { get_input: use_secret_store }
      openstack_config: { get_input: openstack_configuration }
      agent_config:
        install_method: none
        user: { get_input: openstack_agent_username }
        key: { get_input: openstack_agent_local_path_to_key_file }
        port: { get_input: openstack_agent_port }
      use_external_resource: { get_input: use_existing_openstack_virtual_machine }
      resource_id: { get_input: openstack_virtual_machine }
      server:
        image: { get_input: example_openstack_virtual_machine_image_id }
        flavor: { get_input: example_openstack_virtual_machine_flavor_id }
      management_network_name: openstack-example-network-name
    relationships:
      - type: cloudify.relationships.contained_in
        target: example_openstack_network
      - target: example_openstack_key
        type: cloudify.openstack.server_connected_to_keypair
